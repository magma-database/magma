*ma base additions
maUnsigned56At: index
	"Return a 56-bit unsigned integer quantity starting from the given byte index"

	| b0 b1 b2 b3 b4 b5 w |

	w := self at: index.
	b5 := self at: index+1.
	b4 := self at: index+2.
	b3 := self at: index+3.
	b2 := self at: index+4.
	b1 := self at: index+5.
	b0 := self at: index+6.

	"Minimize LargeInteger arithmetic"
	b5 = 0 ifFalse:[w := (b5 bitShift: 8) + w].
	b4 = 0 ifFalse:[w := (b4 bitShift: 16) + w].
	b3 = 0 ifFalse:[w := (b3 bitShift: 24) + w].
	b2 = 0 ifFalse:[w := (b2 bitShift: 32) + w].
	b1 = 0 ifFalse:[w := (b1 bitShift: 40) + w].
	b0 = 0 ifFalse:[w := (b0 bitShift: 48) + w].

	^w